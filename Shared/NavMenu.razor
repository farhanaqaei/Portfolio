@inject NavigationManager NavigationManager;

<ul class="main-menu">
    @* <li>
        <a class="nav-link @(ActivePage == "" ? "active" : "")" @onclick='() => NavigateToPage("")'>
            <span class="menu-icon lnr lnr-home"></span>
            <span class="link-text">Home</span>
        </a>
    </li> *@
    <li>
        <a class="nav-link @(ActivePage == "aboutme" || ActivePage == "" ? "active" : "")" @onclick='() => NavigateToPage("aboutme")'>
            <span class="menu-icon lnr lnr-user"></span>
            <span class="link-text">About Me</span>
        </a>
    </li>
    <li>
        <a class="nav-link @(ActivePage == "resume" ? "active" : "")" @onclick='() => NavigateToPage("resume")'>
            <span class="menu-icon lnr lnr-graduation-hat"></span>
            <span class="link-text">Resume</span>
        </a>
    </li>
    <li>
        <a class="nav-link @(ActivePage == "portfolio" ? "active" : "")" @onclick='() => NavigateToPage("portfolio")'>
            <span class="menu-icon lnr lnr-briefcase"></span>
            <span class="link-text">Portfolio</span>
        </a>
    </li>
    <li>
        <a class="nav-link @(ActivePage == "contact" ? "active" : "")" @onclick='() => NavigateToPage("contact")'>
            <span class="menu-icon lnr lnr-envelope"></span>
            <span class="link-text">Contact</span>
        </a>
    </li>
</ul>

@code {
    private string ActivePage => NavigationManager.Uri.ToString().Replace(NavigationManager.BaseUri.ToString(), "");
    
    [Parameter]
    public EventCallback onNavLinkClicked { get; set; }

    protected async Task NavigateToPage(string page)
    {
        NavigationManager.NavigateTo(page, false);
        await onNavLinkClicked.InvokeAsync();
    }
}
